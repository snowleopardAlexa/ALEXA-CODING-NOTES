1. What is the cursor property in CSS?

The cursor property controls what the mouse cursor will look like when it is located over the element in which this property is set. It's only relevant in browsers/operating systems in which there is a mouse and cursor. They are used for UX to convey the idea of certain functionality. 

.auto            { cursor: auto; }
.default         { cursor: default; }
.none            { cursor: none; }
.context-menu    { cursor: context-menu; }
.help            { cursor: help; }
.pointer         { cursor: pointer; }
.progress        { cursor: progress; }
.wait            { cursor: wait; }
.cell            { cursor: cell; }
.crosshair       { cursor: crosshair; }
.text            { cursor: text; }
.vertical-text   { cursor: vertical-text; }
.alias           { cursor: alias; }
.copy            { cursor: copy; }
.move            { cursor: move; }
.no-drop         { cursor: no-drop; }
.not-allowed     { cursor: not-allowed; }
.all-scroll      { cursor: all-scroll; }
.col-resize      { cursor: col-resize; }
.row-resize      { cursor: row-resize; }
.n-resize        { cursor: n-resize; }
.e-resize        { cursor: e-resize; }
.s-resize        { cursor: s-resize; }
.w-resize        { cursor: w-resize; }
.ns-resize       { cursor: ns-resize; }
.ew-resize       { cursor: ew-resize; }
.ne-resize       { cursor: ne-resize; }
.nw-resize       { cursor: nw-resize; }
.se-resize       { cursor: se-resize; }
.sw-resize       { cursor: sw-resize; }
.nesw-resize     { cursor: nesw-resize; }
.nwse-resize     { cursor: nwse-resize; }

Ther can also be an image:

.custom {
  /* The second value here is a fallback. */
  cursor: url(images/my-cursor.png), auto;

  /* You may need coordinates to adjust the pointer
     for example, the custom cursor is circular and you want
     the middle to be where you click */
  cursor: url(target.svg) 15 15, move;
}

Some WebKit only cursors:

-webkit-zoom-in
-webkit-zoom-out
-webkit-zoom-grab
-webkit-zoom-grabbing

2. What is focus in CSS?

The :focus pseudo class in CSS is used for styling an element that is currenctly targeted by the keyboard, or activated by the mouse. 

textarea:focus {
  background: pink;
}

Any element (most commonly <input>s and <textarea>s) are in “focus” when they are selected and ready to enter text (like when a cursor is blinking). Mouse users can click them (or their related label) to focus, and keyboard users can TAB into them.

3. What is "tabbing" in CSS?

Another use of the :focus pseudo class is "tabbing" through elements. Many browsers have a default focus state tab selection, which is dotted outline. It is easy to remove it, but make sure to replace it with an alternative. 

<a>s, <button>s, <input>s, and textareas all have the :focus state by default, but you can give a focus state to any element in HTML. Both the contenteditable and tabindex attributes work for this:

<textarea tabindex="1">A textarea. Focus states work by default.</textarea>

<button tabindex="2">And I'm a button. Again, works by default.</button>

<div contenteditable tabindex="3">Divs don't usually have a focus state. But I'm special, because I'm <code>contenteditable</code>.</div>

<div tabindex="4">I'm another div, and I have a <code>tabindex</code>. You can't edit me like the div above, but you can tab to me.</div>

<textarea tabindex="-1">I can't be tabbed to. This is a terrible idea, generally, but it can be done using tabindex="-1". Notice that (if you click) I still have a focus state, even though you can't tab to me.</textarea>

4. What is overflow in CSS?

The overflow property controls what happens to content that breaks outside ofits bounds: imagine a div in which you've explicitly set to be 200px wide, but contains an image that is 300px wide. That image will stick out of the div and be visible by default. Whereas if you set the overflow value to hidden, the image will cut off at 200px.

div {
  overflow:  visible | hidden | scroll | auto | inherit
}

visible: content is not clipped when it proceeds outside its box. This is the default value of the property

hidden: overflowing content will be hidden.

scroll: similar to hidden except users will be able to scroll through the hidden content

auto: if the content proceeds outside its box then that content will be hidden whilst a scroll bar should be visible for users to read the rest of the content.

initial: uses the default value which is visible

inherit: sets the overflow to the value of its parent element.

Remember that text will naturally wrap at the end of an element (unless white-space is changed) so text will rarely be the cause of overflow. Unless a height is set, text will just push an element taller as well. Overflow comes into play more commonly when explicit widths and heights are set and it would be undesirable for any content to spill out, or when scrolling is explicitly being avoided.

5. Can we use overflow vertically and horizontally?

Yes, we can use overflow with the overflow-x and overflow-y properties. 

.box {
  overflow-y: hidden;
  overflow-x: scroll;
}

6. Why one of the more popular uses of setting overflow is float clearing? Does it make any sense?

Setting overflow doesn’t clear the float at the element, it self-clears. This means that the element with overflow (any value except visible) will extend as large as it needs to encompass child elements inside that are floated (instead of collapsing), assuming that the height isn’t declared.

A better float clearing technique is the CLEARFIX, as it doesn’t require you to alter the overflow property in a way you don’t need.

7. How to generate block formatting context with CSS overflow?

A block formatting context is a part of a visual CSS rendering of a web page. It's the region in which the layout of block boxes occurs and in which floats interact with other elements.

A block formatting context is created by at least one of the following:

The root element of the document (<html>).
Floats (elements where float isn't none).
Absolutely positioned elements (elements where position is absolute or fixed).
Inline-blocks (elements with display: inline-block).
Table cells (elements with display: table-cell, which is the default for HTML table cells).
Table captions (elements with display: table-caption, which is the default for HTML table captions).
Anonymous table cells implicitly created by the elements with display: table, table-row, table-row-group, table-header-group, table-footer-group (which is the default for HTML tables, table rows, table bodies, table headers, and table footers, respectively), or inline-table.
Block elements where overflow has a value other than visible and clip.
display: flow-root.
Elements with contain: layout, content, or paint.
Flex items (direct children of the element with display: flex or inline-flex) if they are neither flex nor grid nor table containers themselves.
Grid items (direct children of the element with display: grid or inline-grid) if they are neither flex nor grid nor table containers themselves.
Multicol containers (elements where column-count or column-width isn't auto, including elements with column-count: 1).
column-span: all should always create a new formatting context, even when the column-span: all element isn't contained by a multicol container (Spec change, Chrome bug).
Formatting contexts affect layout, but typically, we create a new block formatting context for the positioning and clearing floats rather than changing the layout, because an element that establishes a new block formatting context will:

contain internal floats.
exclude external floats.
suppress margin collapsing.


8. Can scrollbars be styled with CSS?

You used to be able to style scrollbars in IE (v5.5?) but no more. You can style them now again in WebKit browsers. If you need cross-browser custom scrollbars, look to JavaScript.

If an element needs to have scrollbars appended to honor the overflow value, Firefox puts them outside the element, keeping the visible width/height as declared. IE puts the scrollbars inside, keeping the overall width/height as declared.


9. What is WebKit?

WebKit is a browser engine developed by Apple and primarily used in its Safari web browser, as well as all iOS web browsers.

10. What are the vendor prefixes: -moz, -ms, -o, -webkit?

-moz : Mozilla Firefox
-ms: Microsoft Internet Explorer
-o: Opera
-webkit: Google Chrome and Apple Safari

It's always a good approach to use all the vendor prefixes for the css you're applying, in order to address to the browser compatibility of the webpage you're developing. However, css preprocessors like LESS can handle this thing!!!

11. What is calc() function in CSS?

CSS has a special calc() function for doing basic math. 

.main-content {
  /* Subtract 80px from 100vh */
  height: calc(100vh - 80px);
}



12. What is basic CSS terminology?

.myclass p {
    font-size: 2rem;
    line-spacing: 2;
}

myclass -element
.myclass - selector
p - descendant selector
font-size - property
2rem - value

font-size: 2rem --> declaration

font-size: 2rem;
line-spacing: 2; --> declaration block


13. What are simple selectors in CSS?

- elements
- classes
- IDs

The element selector means that our selector is some type of HTML element. Paragraphs, articles, sections, footers, headers, headings, lists, links, and so much more. We simply type in the name of the element and that is the selector for it. Element selectors are the least specific in the CSS cascade. That makes elements a great choice for writing generic code that should govern the style for most of your webpage, using other selectors to override these default values.

<article>...</article>

article {
    font-size: 2rem;
    line-spacing: 2;
}

. A class is a style that can be used in many different cases on the same webpage. It's more specific than an element, meaning that it can override an element styling easily. Classes always start with a period in your style sheet and they are called via the attribute of class in your HTML.

<div class="articleZionPark>...</div>

.articleZionPark {
    font-size: 2rem;
    line-spacing: 2;
}

. An ID is a style that can be used once per page only. It is the most specific of all of the simple selectors, potentially overriding styling set by classes and elements. Unfortunately, since an ID is an identifier, it can only be used once per page on your website. If you need to reuse your styling, you'll want to use an element or a class to do so. IDs always start with a hashtag or a pound sign in your style sheet and they are called via the attribute of ID in your HTML.

<div id="entireForm>...<//div>

#entireForm {
    font-size: 2rem;
    line-spacing: 2; 
}


14. What are groups of selectors?

These are selectors that are separated by commas, but with only one set of styles.
You can mix the selector types.

h1, h2, h3 {
    color: red;
    font-family: 'Roboto';
}

A common mistake made when working with group selectors is to assume that the styling carries through to other elements in the group. 

<p class="warning"><a href="#">Read more</a>about specific warnings.</p>

.warning a:link, a:visited {
   font-weight: bold;
    color: white; 
}

To include just those links in visited or unvisited states descended from a class of warning, you'll need to restate the warning class each time. Remember that each selector is evaluated independently in between the commas.

.warning a:link, .warning a:visited {
    font-weight: bold;
    color: white;
}

15. What is compound selector?

<p class="myclass">Lorem</p>
<ul class="myclass">
   <li>one</li>
   <li>two</li>
   <li>three</li>
</ul>   

p.myclass {
    color: blue;
}

ul.myclass {
    color: yellow;
}

A compound selector is an element + descendant selector. The selector .myclass would make ul list and p paragraph the same colors, that's why if we want to assign different colors to them, we need to put element before .myclass.

16. What is the correct HTML for the following selector?
 
article.col-1.col-end

<article class="col-1 col-end">...</article>
Feedback

Correct, apply all classes in a single class attribute. Since there are no spaces in this selector, the two classes both apply to the same "article" element.


17. Describe what this selector selects:
 
.primary-color a, a:hover 

Selects any a element that is a descendant of any element with a class of primary-color, or any a element which is in a hover state.

18. What does this selector select?
 
#warning, .danger, article 

selects any element with an id attribute of warning, or any element with a class of danger, or any article element


19. Which two terms can be used interchangeably in CSS?

property-value pair declaration
Feedback

A property-value pair and declaration are interchangeable terms.


20. What is a declaration in CSS?

A declaration is a single property-value pair within a declaration block, the group of styles between the curly brackets.


















